{"version":3,"sources":["Assets/icon-moon.svg","Assets/icon-sun.svg","Assets/icon-check.svg","Assets/icon-cross.svg","App.js","reportWebVitals.js","index.js"],"names":["Todo","title","index","completed","allTodos","setAllTodos","setCount","dragover","setDragover","id","className","draggable","onDragStart","document","getElementById","style","opacity","onDragEnd","newArray","temp","onDragOver","e","preventDefault","onClick","prevState","src","checkIcon","alt","splice","crossIcon","Stats","todoState","setTodoState","App","useState","inp","setInp","isNew","setIsNew","count","isDark","setIsDark","elm","classList","toggle","sunIcon","moonIcon","onSubmit","name","onChange","val","target","value","length","i","toLowerCase","placeholder","type","map","todo","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5d4a4c18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import { useState } from \"react\";\nimport \"./App.css\";\nimport moonIcon from \"./Assets/icon-moon.svg\";\nimport sunIcon from \"./Assets/icon-sun.svg\";\nimport checkIcon from \"./Assets/icon-check.svg\";\nimport crossIcon from \"./Assets/icon-cross.svg\";\n\nconst App = () => {\n\tconst [allTodos, setAllTodos] = useState([]);\n\tconst [todoState, setTodoState] = useState(\"All\");\n\tconst [inp, setInp] = useState(\"\");\n\tconst [isNew, setIsNew] = useState(false);\n\tconst [count, setCount] = useState(0);\n\tconst [isDark, setIsDark] = useState(true);\n\tconst [dragover, setDragover] = useState(null);\n\n\tconst addToDo = (e) => {\n\t\te.preventDefault();\n\n\t\tif (isNew) {\n\t\t\tsetAllTodos((prevState) => [\n\t\t\t\t...prevState,\n\t\t\t\t{ title: inp, completed: false },\n\t\t\t]);\n\t\t\tsetCount(count + 1);\n\t\t}\n\t\tsetInp(\"\");\n\t\tsetIsNew(false);\n\t};\n\n\tconst clearTodo = () => {\n\t\tconst newArray = allTodos.filter((todo) => todo.completed === false);\n\t\tsetAllTodos([...newArray]);\n\t};\n\n\tconst changeTheme = () => {\n\t\tconst elm = document.getElementById(\"app\");\n\t\tsetIsDark(!isDark);\n\t\telm.classList.toggle(\"dark\");\n\t};\n\n\tconst handleInput = (e) => {\n\t\tconst val = e.target.value;\n\t\tsetInp(val);\n\n\t\tif (val)\n\t\t\tif (allTodos.length)\n\t\t\t\tfor (let i = 0; i < allTodos.length; i++) {\n\t\t\t\t\tif (allTodos[i].title.toLowerCase() === val.toLowerCase()) {\n\t\t\t\t\t\tsetIsNew(false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else setIsNew(true);\n\t\t\t\t}\n\t\t\telse setIsNew(true);\n\t\telse setIsNew(false);\n\t};\n\n\treturn (\n\t\t<div id='app' className='app light dark'>\n\t\t\t<div className='header__container'>\n\t\t\t\t<div className='header'>\n\t\t\t\t\t<div className='title__container'>\n\t\t\t\t\t\t<h1>T O D O</h1>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tonClick={changeTheme}\n\t\t\t\t\t\t\tsrc={isDark ? sunIcon : moonIcon}\n\t\t\t\t\t\t\talt='icon'\n\t\t\t\t\t\t></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form title='Create New ToDo' onSubmit={addToDo} className='input'>\n\t\t\t\t\t\t<div className={`check ${isNew && \"checked\"}`}>\n\t\t\t\t\t\t\t{isNew && <img src={checkIcon} alt='check'></img>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttitle='Type your TODO'\n\t\t\t\t\t\t\tname='input_TODO'\n\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t\tvalue={inp}\n\t\t\t\t\t\t\tplaceholder='Create a new todo..'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button type='submit' className='add__button'>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='todos__container'>\n\t\t\t\t<div className='todos'>\n\t\t\t\t\t<div className='todos__list'>\n\t\t\t\t\t\t{todoState === \"All\"\n\t\t\t\t\t\t\t? allTodos.map((todo, index) => (\n\t\t\t\t\t\t\t\t\t<Todo\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\ttitle={todo.title}\n\t\t\t\t\t\t\t\t\t\tcompleted={todo.completed}\n\t\t\t\t\t\t\t\t\t\tallTodos={allTodos}\n\t\t\t\t\t\t\t\t\t\tsetAllTodos={setAllTodos}\n\t\t\t\t\t\t\t\t\t\tsetCount={setCount}\n\t\t\t\t\t\t\t\t\t\tdragover={dragover}\n\t\t\t\t\t\t\t\t\t\tsetDragover={setDragover}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t: todoState === \"Active\"\n\t\t\t\t\t\t\t? allTodos.map(\n\t\t\t\t\t\t\t\t\t(todo, index) =>\n\t\t\t\t\t\t\t\t\t\t!todo.completed && (\n\t\t\t\t\t\t\t\t\t\t\t<Todo\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={todo.title}\n\t\t\t\t\t\t\t\t\t\t\t\tcompleted={todo.completed}\n\t\t\t\t\t\t\t\t\t\t\t\tallTodos={allTodos}\n\t\t\t\t\t\t\t\t\t\t\t\tsetAllTodos={setAllTodos}\n\t\t\t\t\t\t\t\t\t\t\t\tsetCount={setCount}\n\t\t\t\t\t\t\t\t\t\t\t\tdragover={dragover}\n\t\t\t\t\t\t\t\t\t\t\t\tsetDragover={setDragover}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: allTodos.map(\n\t\t\t\t\t\t\t\t\t(todo, index) =>\n\t\t\t\t\t\t\t\t\t\ttodo.completed && (\n\t\t\t\t\t\t\t\t\t\t\t<Todo\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={todo.title}\n\t\t\t\t\t\t\t\t\t\t\t\tcompleted={todo.completed}\n\t\t\t\t\t\t\t\t\t\t\t\tallTodos={allTodos}\n\t\t\t\t\t\t\t\t\t\t\t\tsetAllTodos={setAllTodos}\n\t\t\t\t\t\t\t\t\t\t\t\tsetCount={setCount}\n\t\t\t\t\t\t\t\t\t\t\t\tdragover={dragover}\n\t\t\t\t\t\t\t\t\t\t\t\tsetDragover={setDragover}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t  )}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='todos__footer'>\n\t\t\t\t\t\t<div className='info'>{count} items left</div>\n\t\t\t\t\t\t<div className='state1'>\n\t\t\t\t\t\t\t<Stats todoState={todoState} setTodoState={setTodoState} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div onClick={clearTodo} className='info info__state'>\n\t\t\t\t\t\t\tClear Completed\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='state2'>\n\t\t\t\t\t<Stats todoState={todoState} setTodoState={setTodoState} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='footer'>Drag and drop to reorder list</div>\n\t\t</div>\n\t);\n};\n\nconst Todo = ({\n\ttitle,\n\tindex,\n\tcompleted,\n\tallTodos,\n\tsetAllTodos,\n\tsetCount,\n\tdragover,\n\tsetDragover,\n}) => {\n\tconst handleComplete = () => {\n\t\tif (!completed) {\n\t\t\tlet newArray = allTodos;\n\t\t\tnewArray[index].completed = true;\n\t\t\tsetAllTodos([...newArray]);\n\t\t\tsetCount((prevState) => prevState - 1);\n\t\t}\n\t};\n\n\tconst handleRemove = () => {\n\t\tlet newArray = allTodos;\n\t\tnewArray.splice(index, 1);\n\t\tsetAllTodos([...newArray]);\n\t\t!completed && setCount((prevState) => prevState - 1);\n\t};\n\n\tconst handleDragStart = () =>\n\t\t(document.getElementById(index).style.opacity = 0.2);\n\n\tconst handleDragEnd = () => {\n\t\tdocument.getElementById(index).style.opacity = 1;\n\n\t\tlet newArray = allTodos;\n\t\tlet temp = newArray[index];\n\t\tnewArray[index] = newArray[dragover];\n\t\tnewArray[dragover] = temp;\n\n\t\tsetAllTodos(newArray);\n\t\tsetDragover(null);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tid={index}\n\t\t\tclassName='todo__item input'\n\t\t\tdraggable\n\t\t\tonDragStart={handleDragStart}\n\t\t\tonDragEnd={handleDragEnd}\n\t\t\tonDragOver={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tsetDragover(index);\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tonClick={handleComplete}\n\t\t\t\tclassName={`check ${completed && \"checked\"}`}\n\t\t\t>\n\t\t\t\t{completed && <img src={checkIcon} alt='check'></img>}\n\t\t\t</div>\n\t\t\t<div className={`todo__task ${completed && \"complete\"}`}>{title}</div>\n\t\t\t<div onClick={handleRemove}>\n\t\t\t\t<img className='crossIcon' src={crossIcon} alt='remove'></img>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst Stats = ({ todoState, setTodoState }) => {\n\treturn (\n\t\t<div className='info info__mobile'>\n\t\t\t<span\n\t\t\t\tonClick={() => setTodoState(\"All\")}\n\t\t\t\tclassName={`info__state ${todoState === \"All\" && \"activeState\"}`}\n\t\t\t>\n\t\t\t\tAll\n\t\t\t</span>\n\t\t\t<span\n\t\t\t\tonClick={() => setTodoState(\"Active\")}\n\t\t\t\tclassName={`info__state ${todoState === \"Active\" && \"activeState\"}`}\n\t\t\t>\n\t\t\t\tActive\n\t\t\t</span>\n\t\t\t<span\n\t\t\t\tonClick={() => setTodoState(\"Complete\")}\n\t\t\t\tclassName={`info__state ${todoState === \"Complete\" && \"activeState\"}`}\n\t\t\t>\n\t\t\t\tCompleted\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}